expr            : KEYOWORD: VAR IDENTIFIER EQ expr
                : comp-expr ((KEYOWORD:AND|KEYOWORD:OR) comp-expr)*

comp-expr       : NOT comp-expr
                : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr      : term ((PLUS|MINUS) term)*

term            : factor ((MUL|DIV) factor)*

factor          : (PLUS|MINUS) factor
                : power

power			: call (POW factor)*

call			: atom (LPAREN (expr (COMMA expr)*)? RPAREN)?

atom            : INT|FLOAT|IDENTIFIER
                : LPAREN expr RPAREN
                : if-expr
                : for-expt
                : while-expr
                : func-def

if-expr         : KEYOWORD: IF expr KEYOWORD:THEN expr
                  (KEYOWORD:ELIF expr KEYOWORD:THEN expr)*
                  (KEYOWORD:ELSE expr)?

for-expr        : KEYOWORD:FOR IDENTIFIER EQ expr KEYOWORD:TO expr
                : (KEYOWORD:STEP expr)? KEYOWORD:THEN expr

while-expr      : KEYOWORD:WHILE expr KEYOWORD:THEN expr

func-def		: KEYWORD:FUN IDENTIFIER?
                LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
                ARROW expr